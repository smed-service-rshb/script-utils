upstream api-gateway {
    least_conn;
    
    server $BACKEND_SERVER_HOST:$API_GATEWAY_PORT max_fails=1 fail_timeout=60s;
    server $BACKEND_SERVER_HOST_2:$API_GATEWAY_PORT max_fails=1 fail_timeout=60s;
}

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    error_log  /var/log/nginx/error.log debug;

    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'";
    add_header X-Content-Type-Options nosniff;

    # CORS settings
    add_header Access-Control-Allow-Origin '*';
    add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';

    location = / {
        root   /usr/share/nginx/html;
        try_files $uri /start.html;
    }

    location $EFR_PRESENTATION_BASE_PATH {
        alias /usr/share/nginx/html;
        try_files $uri /efr/index.html;
    }

    location $EFR_BACKEND_BASE_PATH/ {
        client_max_body_size 50m;
        proxy_pass http://api-gateway;
        proxy_next_upstream error non_idempotent;
        proxy_next_upstream_tries 1;
    }

    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
}
